# manual release
name: manual
on:
  workflow_dispatch:
    inputs:
      jq:
        description: 'jq release tag to use'
        required: true
      version:
        description: 'Version to publish to nuget.org'
        required: true

env:
  DOTNET_NOLOGO: true
  Configuration: Release
  PackOnBuild: true
  GeneratePackageOnBuild: true
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  
jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
          fetch-depth: 0

      - name: ⏬ download
        run: |
          echo "Downloading jq release tag ${{ github.event.inputs.jq }}"
          gh release download ${{ github.event.inputs.jq }} --dir src/JQ/tools --clobber -p jq-linux-a*64 --repo jqlang/jq
          gh release download ${{ github.event.inputs.jq }} --dir src/JQ/tools --clobber -p jq-linux-i386 --repo jqlang/jq
          gh release download ${{ github.event.inputs.jq }} --dir src/JQ/tools --clobber -p jq-macos* --repo jqlang/jq
          gh release download ${{ github.event.inputs.jq }} --dir src/JQ/tools --clobber -p jq-windows-* --repo jqlang/jq

      - name: 🙏 build
        run: dotnet build -m:1 -p:version=${{ github.event.inputs.version }} -bl:build.binlog

      - name: 🧪 test
        run: dotnet test --no-build 

      - name: 🐛 logs
        uses: actions/upload-artifact@v3
        if: runner.debug && always()
        with:
          name: logs
          path: '*.binlog'

      - name: 🚀 nuget
        run: dotnet nuget push ./bin/**/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{secrets.NUGET_API_KEY}} --skip-duplicate
