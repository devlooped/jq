# Builds and runs tests in all three supported OSes
# Pushes CI feed if secrets.SLEET_CONNECTION is provided

name: build
on: 
  workflow_dispatch:
  push:
    branches: [ main, dev, 'dev/*', 'feature/*', 'rel/*' ]
    paths-ignore:
      - changelog.md
      - code-of-conduct.md
      - security.md
      - support.md
      - readme.md
  pull_request:
    types: [opened, synchronize, reopened]

env:
  DOTNET_NOLOGO: true
  VersionPrefix: 42.42.${{ github.run_number }}
  VersionLabel: ${{ github.ref }}
  PackOnBuild: true
  GeneratePackageOnBuild: true
  GH_TOKEN: ${{ secrets.GH_TOKEN }}
  
defaults:
  run:
    shell: bash

jobs:
  build:
    name: build-${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
          fetch-depth: 0

      - name: download
        run: |
          gh release download --dir src/JQ/tools --clobber -p jq-linux-a*64 --repo jqlang/jq
          gh release download --dir src/JQ/tools --clobber -p jq-linux-i386 --repo jqlang/jq
          gh release download --dir src/JQ/tools --clobber -p jq-macos* --repo jqlang/jq
          gh release download --dir src/JQ/tools --clobber -p jq-windows-* --repo jqlang/jq

      - name: 🙏 build
        run: dotnet test -bl:build.binlog

      - name: 🐛 logs
        uses: actions/upload-artifact@v3
        if: runner.debug && always()
        with:
          name: logs
          path: '*.binlog'

      # Only push CI package to sleet feed if building on ubuntu (fastest)
      - name: 🚀 sleet
        env:
          SLEET_CONNECTION: ${{ secrets.SLEET_CONNECTION }}
        if: env.SLEET_CONNECTION != ''
        run: |
          dotnet tool install -g --version 4.0.18 sleet 
          sleet push bin --config none -f --verbose -p "SLEET_FEED_CONTAINER=nuget" -p "SLEET_FEED_CONNECTIONSTRING=${{ secrets.SLEET_CONNECTION }}" -p "SLEET_FEED_TYPE=azure" || echo "No packages found"

  dotnet-format:
    runs-on: ubuntu-latest
    steps:
      - name: 🤘 checkout
        uses: actions/checkout@v2
        with: 
          submodules: recursive
          fetch-depth: 0

      - name: ✓ ensure format
        run: |
          dotnet format whitespace --verify-no-changes -v:diag --exclude ~/.nuget
          dotnet format style --verify-no-changes -v:diag --exclude ~/.nuget
